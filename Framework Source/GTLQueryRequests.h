/* This file was generated by the ServiceGenerator.
 * The ServiceGenerator is Copyright (c) 2016 Google Inc.
 */

//
//  GTLQueryRequests.h
//

// ----------------------------------------------------------------------------
// NOTE: This file is generated from Google APIs Discovery Service.
// Service:
//   requests/v1
// Description:
//   Square 1 API
// Classes:
//   GTLQueryRequests (3 custom class methods, 4 custom properties)

#if GTL_BUILT_AS_FRAMEWORK
  #import "GTL/GTLQuery.h"
#else
  #import "GTLQuery.h"
#endif

@interface GTLQueryRequests : GTLQuery

//
// Parameters valid on all methods.
//

// Selector specifying which fields to include in a partial response.
@property (nonatomic, copy) NSString *fields;

//
// Method-specific parameters; see the comments below for more information.
//
@property (nonatomic, copy) NSString *ownerid;
@property (nonatomic, copy) NSString *targetid;
@property (nonatomic, copy) NSString *token;

#pragma mark - "requests" methods
// These create a GTLQueryRequests object.

// Method: requests.requests.acceptUser
//  Authorization scope(s):
//   kGTLAuthScopeRequestsUserinfoEmail
// Fetches a GTLRequestsIacceptUser.
+ (instancetype)queryForRequestsAcceptUserWithOwnerid:(NSString *)ownerid
                                             targetid:(NSString *)targetid
                                                token:(NSString *)token;

// Method: requests.requests.list
//  Authorization scope(s):
//   kGTLAuthScopeRequestsUserinfoEmail
// Fetches a GTLRequestsIlist.
+ (instancetype)queryForRequestsListWithOwnerid:(NSString *)ownerid
                                       targetid:(NSString *)targetid
                                          token:(NSString *)token;

// Method: requests.requests.rejectUser
//  Authorization scope(s):
//   kGTLAuthScopeRequestsUserinfoEmail
// Fetches a GTLRequestsIrejectUser.
+ (instancetype)queryForRequestsRejectUserWithOwnerid:(NSString *)ownerid
                                             targetid:(NSString *)targetid
                                                token:(NSString *)token;

@end
